

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT


# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

# HACK/TODO ex. from my personal shell
# TODO unicode
# TODO unicode
# TODO unicode
# TODO unicode

# VCS_INFO HOOKS

### Generic hook functions

### GIT hook functions

# function +vi-git-remotebranch() {
#   local remote
#
#   # Are we on a remote-tracking branch?
#   remote=${$(git rev-parse --verify ${hook_com[branch]}@{upstream} \n#     --symbolic-full-name 2>/dev/null)/refs/remotes/}
#
#   # The first test will show a tracking branch whenever there is one. The
#   # second test, however, will only show the remote branch's name if it
#   # differs from the local one.
#   if [[ -n ${remote} ]] ; then
#   #if [[ -n ${remote} && ${remote#*/} != ${hook_com[branch]} ]] ; then
#     # TODO unicode
#     hook_com[branch]="î‚  ${hook_com[branch]} [${remote}]"
#   fi
# }

### HG hook functions

### Definitions done

# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

# AUTOGENERATED - DO NOT EDIT
