

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

# synopsis {{{
# If https://github.com/romkatv/gitstatus plugin is enabled and the current directory is
# within a git repo, this segment displays the same prompt as vcs segment but 3 times faster.
# Otherwise it does nothing.
#
# Is async and will talk to git in worker process.
# }}}

function p10ks_gitstatus () {
  REPLY="${p10ks_gitstatus["prompt"]}"
}

typeset -gA p10ks_gitstatus
p10ks_gitstatus["prompt"]="<async:gitstatus>"
p10ks_gitstatus[status]="loading"

p10ks_gitstatus "$@"

# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

function p10ks_gitstatus_default_opts () {
  reply=(black CONDITIONAL CONDITIONAL async)
}

# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

function p10ks_gitstatus_display_hidden () {
  [[ "${p10ks_gitstatus["prompt"]}" == "" ]] && true || false
}

# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

function p10ks_gitstatus_bg () {
  case "${p10ks_gitstatus[status]}" in
    "dirty") REPLY=${p10ks_gitstatus[color_dirty]} ;;
    "loading") REPLY=${p10ks_gitstatus[color_loading]} ;;
    *) REPLY=${p10ks_gitstatus[color_default]} ;;
  esac
}

# env-vars {{{
# p10ks_gitstatus[color_dirty] -> bgcolor when repo is dirty
p10ks_gitstatus[color_dirty]=${p10ks_gitstatus[color_dirty]:-"yellow"}
# p10ks_battery[color_loading] -> bgcolor while async process is running
p10ks_gitstatus[color_loading]=${p10ks_gitstatus[color_loading]:-"8"}
# p10ks_gitstatus[color_default] -> color when repo is clean
p10ks_gitstatus[color_default]=${p10ks_gitstatus[color_default]:-"green"}
# }}}

p10ks_gitstatus_bg "$@"

# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT


# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

p10ks_gitstatus_async ()
{
  gitstatus_query_dir || return
  echo -nE "$((VCS_STATUS_HAS_STAGED || VCS_STATUS_HAS_UNSTAGED)),;;;"

  echo -nE "$VCS_STATUS_LOCAL_BRANCH"
  if [[ -n "$VCS_STATUS_ACTION" ]]; then
    echo -nE "%F{${red}}| $VCS_STATUS_ACTION%f"
  else
    if [[ -n "$VCS_STATUS_REMOTE_BRANCH" &&
          "$VCS_STATUS_LOCAL_BRANCH" != "$VCS_STATUS_REMOTE_BRANCH" ]]; then
      echo -nE $' → '"$VCS_STATUS_REMOTE_BRANCH"
    fi
    local icons=''
    (( VCS_STATUS_HAS_STAGED == 1 )) && icons+='✚'
    (( VCS_STATUS_HAS_UNSTAGED == 1 )) && icons+='●'
    (( VCS_STATUS_HAS_UNTRACKED == 1 )) && icons+='◌'
    echo -nE "${icons:+ $icons}"
    (( VCS_STATUS_COMMITS_AHEAD > 0 )) && echo -nE " +$VCS_STATUS_COMMITS_AHEAD"
    (( VCS_STATUS_COMMITS_BEHIND > 0 )) && echo -nE " -$VCS_STATUS_COMMITS_BEHIND"
  fi
}

p10ks_gitstatus_async "$@"

# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

p10ks_gitstatus_async_return ()
{
  # $1 return code
  # $2 resulting (stdout) output from job execution
  # $3 execution time, floating point e.g. 0.0076138973 seconds
  # $4 resulting (stderr) error output from job execution

  local -a tmp
  tmp=("${(s.;;;.)2}")
  p10ks_gitstatus["prompt"]="${tmp[2]}"
  tmp=("${(s.,.)tmp}")
  (( ${tmp[1]} )) && p10ks_gitstatus[status]="dirty" || p10ks_gitstatus[status]="returned"
}

p10ks_gitstatus_async_return "$@"

# AUTOGENERATED - DO NOT EDIT

# AUTOGENERATED - DO NOT EDIT
# vim: ft=zsh ts=2 sw=2 et fenc=utf-8

p10ks_gitstatus_async_started ()
{
  # _display_hidden is hooked on the empty scalar:
  p10ks_gitstatus["prompt"]="${p10ks_gitstatus[loading_msg]}"
  p10ks_gitstatus[status]="loading"
}

[[ "${(t)p10ks_gitstatus}" != "association" ]] && {
  typeset -gA p10ks_gitstatus
}
# env-vars {{{
# p10ks_gitstatus[loading_msg] -> message while waiting for async process
# (set to blank string to hide the segment during async wait)
p10ks_gitstatus[loading_msg]=${p10ks_gitstatus[loading_msg]:-"<loading...>"}
# }}}

# resets the async status when done with renders
function _p10ks_gitstatus_async_complete () {
  _p10k_segment_async_reset_status p10ks_gitstatus
}

_p10k_add_hook _p10k_async_complete _p10ks_gitstatus_async_complete

p10ks_gitstatus_async_started "$@"

# AUTOGENERATED - DO NOT EDIT
